#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# Use hardening options
export DEB_BUILD_HARDENING=1
# Quagga build process already does PIE so no need for intervention
export DEB_BUILD_HARDENING_PIE=0

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
PACKAGE=vyatta-quagga
PKGDIR=$(CURDIR)/debian/$(PACKAGE)
BUILD_STAMP=debian/build-stamp

CFLAGS = -Wall
WANT_SNMP=1

# minttl is in 2.6.34 or later but Debian headers are still at 2.6.32
CFLAGS += -DIP_MINTTL=21 -DIPV6_MINHOPCNT=73

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0 -g
else
	CFLAGS += -O2 -g
endif

ifeq ($(WANT_SNMP),1)
	xable_snmp = --enable-snmp
else
	xable_snmp = --disable-snmp
endif

configure	 = ./configure
configure	+= --host=$(DEB_HOST_GNU_TYPE)
configure	+= --build=$(DEB_BUILD_GNU_TYPE)
configure	+= --prefix=/usr
configure	+= --sbindir=/usr/sbin
configure	+= --libdir=/usr/lib/quagga
configure	+= --localstatedir=/var/run/quagga
configure	+= --sysconfdir=/etc/quagga
configure	+= --mandir=/usr/share/man
configure	+= --infodir=/usr/share/info/quagga
configure	+= --enable-exampledir=$(T)/usr/share/doc/quagga/examples/
configure	+= --enable-vtysh
configure	+= --enable-ipv6
configure	+= --enable-isisd
configure	+= --enable-watchquagga
configure	+= --enable-opaque-lsa
configure	+= --enable-ospfclient=yes
configure	+= --enable-ospfapi=yes
configure	+= --enable-ospf-te
configure	+= --enable-multipath=64
configure	+= --enable-user=quagga
configure	+= --enable-group=quagga
configure	+= --enable-vty-group=quaggavty
configure	+= --enable-configfile-mask=0640
configure	+= --enable-logfile-mask=0640
configure	+= --enable-rtadv
configure	+= --enable-gcc-rdynamic
configure	+= $(xable_snmp)
configure	+= --with-libpam
configure	+= CFLAGS="$(CFLAGS)"
configure	+= --disable-doc

configure: configure.ac Makefile.am
	chmod +x debian/autogen.sh
	debian/autogen.sh

config.status: configure
	dh_testdir
	rm -f config.cache
	$(configure)

build: $(BUILD_STAMP)

$(BUILD_STAMP):  config.status
	dh_testdir
	$(MAKE)
	touch $@

clean: clean-patched

# Clean everything up, including everything auto-generated
# at build time that needs not to be kept around in the Debian diff
clean-patched:
	dh_testdir
	dh_testroot
	if test -f Makefile ; then $(MAKE) clean distclean ; fi
	rm -f $(BUILD_STAMP)
	rm -f config.status config.sub config.guess config.log
	rm -f aclocal.m4 configure Makefile.in Makefile INSTALL
	rm -f etc/default/vyatta
	rm -rf config
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	$(MAKE) DESTDIR=$(PKGDIR) install

	install -D --mode=0644 debian/lintian $(PKGDIR)/usr/share/lintian/overrides/$(PACKAGE)

ifeq ($(WANT_SNMP), 1)
	install -D --mode=0644 zebra/GNOME-PRODUCT-ZEBRA-MIB $(PKGDIR)/usr/share/snmp/mibs/GNOME-PRODUCT-ZEBRA-MIB.txt
endif


# Build architecture-dependent files here.
binary-arch: build install
	rm -f debian/files
	dh_testdir
	dh_testroot

	dh_installdirs
	dh_link

	dh_installchangelogs ChangeLog
	dh_installdebconf
	dh_installdocs
	dh_installexamples
	dh_installman
	dh_installinit
	dh_installpam --name=quagga
	dh_installlogrotate --name=quagga

	dh_strip --dbg-package=vyatta-quagga-dbg
	dh_compress
	dh_fixperms
	dh_makeshlibs --noscripts
	dh_installdeb
#	dh_shlibdeps: removed "-L quagga" for Woody backport compatibility.
	dh_shlibdeps
	if [ -f "../.VYOS_DEV_BUILD" ]; then \
		dh_gencontrol -- -v999.dev; \
	else \
		dh_gencontrol; \
	fi
	dh_md5sums
	dh_builddeb

binary: binary-arch
.PHONY: build clean binary-arch binary install 

